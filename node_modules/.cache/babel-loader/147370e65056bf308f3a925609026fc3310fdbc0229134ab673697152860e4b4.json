{"ast":null,"code":"import axios from 'axios';\n\n// הגדרת כתובת ה-API כ-bririd defualt\naxios.defaults.baseURL = \"http://localhost:5279\"; // עדכן לפורט המתאים שבו ה-API שלך רץ\n\n// הוספת interceptor לשגיאות\naxios.interceptors.response.use(response => response, error => {\n  console.error(\"There was an error!\", error); // רישום השגיאה ללוג\n  return Promise.reject(error);\n});\nexport default {\n  getTasks: async () => {\n    const result = await axios.get(`/todos`); // עדכון ל-path הנכון של ה-API\n    return result.data;\n  },\n  addTask: async name => {\n    console.log('addTask', name);\n    const result = await axios.post(`/todos`, {\n      name\n    }); // שלח את המידע ל-API\n    return result.data; // החזר את התגובה מה-API\n  },\n  setCompleted: async (id, isComplete) => {\n    console.log('setCompleted', {\n      id,\n      isComplete\n    });\n    const result = await axios.put(`/todos/${id}`, {\n      isComplete\n    }); // עדכון הסטטוס\n    return result.data; // החזר את התגובה מה-API\n  },\n  deleteTask: async id => {\n    console.log('deleteTask', id);\n    const result = await axios.delete(`/todos/${id}`); // קריאה למחיקת המשימה\n    return result.data; // החזר את התגובה מה-API\n  }\n};","map":{"version":3,"names":["axios","defaults","baseURL","interceptors","response","use","error","console","Promise","reject","getTasks","result","get","data","addTask","name","log","post","setCompleted","id","isComplete","put","deleteTask","delete"],"sources":["C:/תכנות/C#/TodoApi/ToDoListReact-master/src/service.js"],"sourcesContent":["import axios from 'axios';\n\n// הגדרת כתובת ה-API כ-bririd defualt\naxios.defaults.baseURL = \"http://localhost:5279\"; // עדכן לפורט המתאים שבו ה-API שלך רץ\n\n// הוספת interceptor לשגיאות\naxios.interceptors.response.use(\n    response => response,\n    error => {\n        console.error(\"There was an error!\", error); // רישום השגיאה ללוג\n        return Promise.reject(error);\n    }\n);\n\nexport default {\n  getTasks: async () => {\n    const result = await axios.get(`/todos`); // עדכון ל-path הנכון של ה-API\n    return result.data;\n  },\n\n  addTask: async (name) => {\n    console.log('addTask', name);\n    const result = await axios.post(`/todos`, { name }); // שלח את המידע ל-API\n    return result.data; // החזר את התגובה מה-API\n  },\n\n  setCompleted: async (id, isComplete) => {\n    console.log('setCompleted', { id, isComplete });\n    const result = await axios.put(`/todos/${id}`, { isComplete }); // עדכון הסטטוס\n    return result.data; // החזר את התגובה מה-API\n  },\n\n  deleteTask: async (id) => {\n    console.log('deleteTask', id);\n    const result = await axios.delete(`/todos/${id}`); // קריאה למחיקת המשימה\n    return result.data; // החזר את התגובה מה-API\n  }\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACAA,KAAK,CAACC,QAAQ,CAACC,OAAO,GAAG,uBAAuB,CAAC,CAAC;;AAElD;AACAF,KAAK,CAACG,YAAY,CAACC,QAAQ,CAACC,GAAG,CAC3BD,QAAQ,IAAIA,QAAQ,EACpBE,KAAK,IAAI;EACLC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC,CAAC,CAAC;EAC7C,OAAOE,OAAO,CAACC,MAAM,CAACH,KAAK,CAAC;AAChC,CACJ,CAAC;AAED,eAAe;EACbI,QAAQ,EAAE,MAAAA,CAAA,KAAY;IACpB,MAAMC,MAAM,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;IAC1C,OAAOD,MAAM,CAACE,IAAI;EACpB,CAAC;EAEDC,OAAO,EAAE,MAAOC,IAAI,IAAK;IACvBR,OAAO,CAACS,GAAG,CAAC,SAAS,EAAED,IAAI,CAAC;IAC5B,MAAMJ,MAAM,GAAG,MAAMX,KAAK,CAACiB,IAAI,CAAC,QAAQ,EAAE;MAAEF;IAAK,CAAC,CAAC,CAAC,CAAC;IACrD,OAAOJ,MAAM,CAACE,IAAI,CAAC,CAAC;EACtB,CAAC;EAEDK,YAAY,EAAE,MAAAA,CAAOC,EAAE,EAAEC,UAAU,KAAK;IACtCb,OAAO,CAACS,GAAG,CAAC,cAAc,EAAE;MAAEG,EAAE;MAAEC;IAAW,CAAC,CAAC;IAC/C,MAAMT,MAAM,GAAG,MAAMX,KAAK,CAACqB,GAAG,CAAC,UAAUF,EAAE,EAAE,EAAE;MAAEC;IAAW,CAAC,CAAC,CAAC,CAAC;IAChE,OAAOT,MAAM,CAACE,IAAI,CAAC,CAAC;EACtB,CAAC;EAEDS,UAAU,EAAE,MAAOH,EAAE,IAAK;IACxBZ,OAAO,CAACS,GAAG,CAAC,YAAY,EAAEG,EAAE,CAAC;IAC7B,MAAMR,MAAM,GAAG,MAAMX,KAAK,CAACuB,MAAM,CAAC,UAAUJ,EAAE,EAAE,CAAC,CAAC,CAAC;IACnD,OAAOR,MAAM,CAACE,IAAI,CAAC,CAAC;EACtB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}